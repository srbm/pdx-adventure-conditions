{"version":3,"sources":["components/MainNav.js","components/Header.js","components/Map.js","Home.js","components/Weather.js","App.js","index.js"],"names":["MainNav","react_default","a","createElement","Nav","bsStyle","justified","lib","eventKey","to","NavItem","Header","exact","components_MainNav","Map","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","osm","L","tileLayer","maxZoom","attribution","rain","OWM","showLegend","opacity","appId","process","snow","map","center","LatLng","props","lat","lon","zoom","layers","baseMaps","Open Street Map","overlayMaps","Rain","Snow","addLayer","control","collapsed","addTo","id","Component","Home","weather","Jumbotron","className","ListGroup","ListGroupItem","header","temp","desc","wind","components_Map","MtStHelens","returnLatLonWeather","axios","get","concat","then","response","setState","data","main","description","speed","loading","catch","error","console","log","App","returnWeather","city","arguments","length","undefined","_this2","BrowserRouter","components_Header","Route","path","render","src_Home","Weather","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.849b657a.chunk.js","sourcesContent":["import React from 'react';\nimport { Nav, NavItem } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst MainNav = () => {\n  return (\n    <Nav bsStyle=\"pills\" justified>\n      <LinkContainer eventKey={1} to=\"/mt-st-helens\"><NavItem>Mt St Helens</NavItem></LinkContainer>\n      <LinkContainer eventKey={2} to=\"/the-gorge\"><NavItem>The Gorge</NavItem></LinkContainer>\n      <LinkContainer eventKey={3} to=\"/mt-hood\"><NavItem>Mt Hood</NavItem></LinkContainer>\n      <LinkContainer eventKey={4} to=\"/the-coast\"><NavItem>The Coast</NavItem></LinkContainer>\n      <LinkContainer eventKey={5} to=\"/coastal-range\"><NavItem>Coastal Range</NavItem></LinkContainer>\n    </Nav>\n  );\n}\n\nexport default MainNav;\n","import React from 'react';\nimport MainNav from './MainNav';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst Header = () => {\n  return (\n    <header>\n      <LinkContainer exact to='/pdx-adventure-conditions'><h1>Portland Area Adventure Conditions</h1></LinkContainer>\n      <div>\n        <MainNav />\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport L from 'leaflet';\nimport OWM from 'leaflet-openweathermap';\n\n\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {}\n  }\n\n  componentDidMount() {\n    var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    maxZoom: 18, attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>' });\n\n    var rain =\n      L.OWM.rain({showLegend: false, opacity: 0.6, appId: process.env.REACT_APP_OWM_API1 }),\n      snow = L.OWM.snow({opacity: 0.6, appId: process.env.REACT_APP_OWM_API1})\n    //var city = L.OWM.current({temperatureUnit: 'F', temperatureDigits: 0, appId: process.env.REACT_APP_OWM_API1 });\n\n    var map = L.map('home-map', { center: new L.LatLng(this.props.lat, this.props.lon), zoom: 10, layers: [osm] });\n    var baseMaps = { \"Open Street Map\": osm };\n    var overlayMaps = { \"Rain\": rain, \"Snow\": snow };\n    map.addLayer(rain);\n    L.control.layers(baseMaps, overlayMaps, {collapsed: false}).addTo(map);\n  }\n  render() {\n    return (\n      <div id=\"home-map\"></div>\n    );\n  }\n\n}\n\nexport default Map;\n","import React from 'react';\nimport { Jumbotron, ListGroup, ListGroupItem } from 'react-bootstrap';\nimport Map from './components/Map';\n\nconst Home = props => {\n  let weather = props.weather;\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Where's Your Next Adventure?</h1>\n        <h2>Portland, Oregon</h2>\n      </Jumbotron>\n      <div className=\"flex-container\">\n        <ListGroup>\n          <ListGroupItem header=\"Temperature\">{weather.temp}&#8457;</ListGroupItem>\n          <ListGroupItem header=\"Outlook\">{weather.desc}</ListGroupItem>\n          <ListGroupItem header=\"Wind Speed\">{weather.wind} mph</ListGroupItem>\n        </ListGroup>\n        <Map lat={45.537} lon={-122.6499} />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport Map from './Map'\n\nclass MtStHelens extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      weather: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.returnLatLonWeather(this.props.lat, this.props.lon);\n  }\n\n  returnLatLonWeather = (lat, lon) => {\n    axios.get(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_OWM_API1}&units=imperial`)\n      .then(response => {\n        this.setState({\n          weather: {\n            temp: response.data.main.temp,\n            desc: response.data.weather[0].description,\n            wind: response.data.wind.speed,\n          },\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(\"Error fetching/parsing data.\", error);\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{this.props.header}</h2>\n        {\n          (this.state.loading)\n          ? <div>Loading...</div>\n          : <div className=\"flex-container\">\n              <ListGroup>\n                <ListGroupItem header=\"Temperature\">{this.state.weather.temp}&#8457;</ListGroupItem>\n                <ListGroupItem header=\"Outlook\">{this.state.weather.desc}</ListGroupItem>\n                <ListGroupItem header=\"Wind Speed\">{this.state.weather.wind} mph</ListGroupItem>\n              </ListGroup>\n              <Map lat={this.props.lat} lon={this.props.lon} />\n            </div>\n      }\n      </div>\n    );\n  }\n}\n\nexport default MtStHelens;\n","\nimport React, { Component } from 'react';\nimport './App.scss';\nimport Header from './components/Header';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Home from './Home';\nimport Weather from './components/Weather';\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      weather: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.returnWeather();\n  }\n\n  returnWeather = (city = 'Portland') => {\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OWM_API1}&units=imperial`)\n      .then(response => {\n        this.setState({\n          weather: {\n            temp: response.data.main.temp,\n            desc: response.data.weather[0].description,\n            wind: response.data.wind.speed,\n          },\n          loading: false\n        });\n      })\n      .catch(error => {\n        console.log(\"Error fetching/parsing data.\", error);\n      });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Header />\n          <Route path=\"/pdx-adventure-conditions\" render={ () =>\n            (this.state.loading)\n            ? <div>Loading</div>\n            : <Home weather={this.state.weather} />} />\n\n\n          <Route path=\"/mt-st-helens\" render={ () =>\n            <Weather lat={46.130836}\n                     lon={-122.170973}\n                     header=\"Mt St Helens\"/>\n                   } />\n          <Route path=\"/the-gorge\" render={ () =>\n            <Weather lat={45.661201}\n                     lon={ -121.894989}\n                     header=\"The Gorge\"/>\n                   } />\n          <Route path=\"/mt-hood\" render={ () =>\n            <Weather lat={45.301499}\n                     lon={-121.747544}\n                     header=\"Mt Hood\" />\n                   } />\n          <Route path=\"/the-coast\" render={ () =>\n            <Weather lat={45.828411}\n                     lon={-123.961235}\n                     header=\"The Coast\" />\n                   } />\n          <Route path=\"/coastal-range\" render={ () =>\n            <Weather lat={45.517953}\n                     lon={-123.595825}\n                     header=\"Coastal Range\" />\n                   } />\n        </div>\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}